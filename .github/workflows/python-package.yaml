# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  version_test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Configure locales
      run: |
        sudo locale-gen en_CA.UTF-8 fr_CA.UTF-8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # python setup.py install
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 phac_aspc --count --select=E9,F63,F7,F82 --show-source --statistics
        # The GitHub editor is 127 chars wide
        flake8 phac_aspc --count --max-complexity=10 --max-line-length=127 --statistics
        # also test with pylint
        pylint phac_aspc
    - name: Test
      run: |
        pytest

  coverage:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Configure locales
      run: |
        sudo locale-gen en_CA.UTF-8 fr_CA.UTF-8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python setup.py install
    - name: Lint
      run: |
        flake8 phac_aspc --count --select=E9,F63,F7,F82 --show-source --statistics
        # stop the build if there are Python syntax errors or undefined names
        flake8 phac_aspc --count --select=E9,F63,F7,F82 --show-source --statistics
        # The GitHub editor is 127 chars wide
        flake8 phac_aspc --count --max-complexity=10 --max-line-length=127 --statistics
        # also test with pylint
    - name: Test
      run: |
        pytest
    - name: Build coverage file
      run: |
       pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=. | tee pytest-coverage.txt
    - name: Pytest coverage comment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        junitxml-path: ./pytest.xml
